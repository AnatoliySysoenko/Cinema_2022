/** @format */ /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/** @format */ /** @format */ /** @format */ /** @format */
.header-logo__description, .header-logo__title {
  text-shadow: 0 0 5px #000000, 0 0 10px #000000, 0 0 20px #000000;
}

/** @format */
.navbar-inverse {
  background-color: #191919;
}
.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > li > a:focus {
  background-color: #165690;
}
.navbar-inverse .navbar-nav > .active > a {
  background-color: #053159;
}
.navbar-inverse .navbar-nav > .active > a:hover, .navbar-inverse .navbar-nav > .active > a:focus {
  background-color: #517ba2;
}
.navbar-header {
  text-align: center;
}
.navbar-toggle {
  float: none;
  margin-right: 0;
}

.panel {
  border: none;
  background-color: #f4f4f4;
  margin-bottom: 30px;
}
.panel-info > .panel-heading {
  color: #ffffff;
  background-color: #df8a13;
  border: none;
  font-size: 1.25rem;
  letter-spacing: 0.1em;
}
.panel-body {
  border: 1px solid #d5d5d5;
  border-radius: 0 0 4px 4px;
}

.input-lg, .input-group-lg > .form-control {
  font-size: 0.875rem;
}

.thumbnail a > img,
.thumbnail > img {
  width: 100%;
}

/** @format */
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-size: 16px;
  overflow-y: scroll;
}

body {
  font-size: 16px;
  font-family: "PT Sans", sans-serif;
}

a {
  color: #165690;
}
a:hover, a:focus {
  text-decoration: none;
  color: #df8a13;
}
h1::after {
  position: absolute;
  width: 100%;
  margin: 0.85em 0 0 15px;
  content: "";
  border-bottom: 3px solid #f0ad4f;
}

h2 {
  font-family: "PT Serif", serif;
}
h2::before {
  position: absolute;
  left: 0;
  width: 30px;
  margin: 0.25em 0 0 0;
  content: "";
  border-bottom: 3px solid #f0ad4f;
}
h2::after {
  position: absolute;
  width: 100%;
  margin: 0.85em 0 0 15px;
  content: "";
  border-bottom: 3px solid #f0ad4f;
}

/** @format */
.header {
  margin-bottom: 80px;
}
.header-logo {
  text-align: center;
  padding: 100px 0;
  background-color: #232323;
  background-image: url(../img/header-bg.jpg);
  background-position: center;
  background-size: cover;
}
.header-logo__title {
  display: block;
  color: #df8a13;
  font-family: "PT Serif", serif;
}
.header-logo__description {
  display: block;
  color: #ffffff;
  font-size: 1.15rem;
  letter-spacing: 0.2em;
}

/** @format */
.main {
  margin-bottom: 80px;
}
.main .site-search {
  margin-bottom: 45px;
}
.main .user-login {
  margin-bottom: 60px;
}

.top-week,
.new-films {
  position: relative;
  overflow: hidden;
}
.top-week-row,
.new-films-row {
  margin-right: -7.5px;
  margin-left: -7.5px;
  margin-bottom: -15px;
}
.top-week-item,
.new-films-item {
  padding-right: 7.5px;
  padding-left: 7.5px;
  margin-bottom: 15px;
}
.top-week-item:hover .thumbnail,
.new-films-item:hover .thumbnail {
  background-color: #df8a13;
  border-color: #df8a13;
}
.top-week-item:hover .new-films-item__title,
.new-films-item:hover .new-films-item__title {
  color: #ffffff;
}
.top-week-item__thumbnail,
.new-films-item__thumbnail {
  margin-bottom: 0;
  -webkit-transition: background-color 0.25s;
  -o-transition: background-color 0.25s;
  transition: background-color 0.25s;
}
.top-week-item__title,
.new-films-item__title {
  text-align: center;
  margin: 0;
  font-size: 1rem;
  font-weight: bold;
  -webkit-transition: color 0.25s;
  -o-transition: color 0.25s;
  transition: color 0.25s;
  display: block;
  overflow: hidden;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
}

.film-news {
  position: relative;
  overflow: hidden;
}
.film-news-item h3 > a {
  -webkit-transition: color 0.25s;
  -o-transition: color 0.25s;
  transition: color 0.25s;
}
.film-news-item:hover h3 > a, .film-news-item:focus h3 > a {
  color: #df8a13;
}
.film-news-item:hover .thumbnail, .film-news-item:focus .thumbnail {
  background-color: #df8a13;
  border-color: #df8a13;
}
.film-news-item:hover .btn-warning, .film-news-item:focus .btn-warning {
  background-color: #df8a13;
}
.film-news-item .thumbnail {
  margin-bottom: 0;
  -webkit-transition: background-color 0.25s;
  -o-transition: background-color 0.25s;
  transition: background-color 0.25s;
}
.film-news-item__text {
  text-align: justify;
}
.film-news-item__button {
  float: right;
  margin-bottom: 30px;
  -webkit-transition: background-color 0.25s;
  -o-transition: background-color 0.25s;
  transition: background-color 0.25s;
}

/** @format */
.left-sidebar {
  margin-bottom: 80px;
}
.left-sidebar .panel:last-of-type {
  margin: 0;
}

.vertical-slider {
  border-radius: 4px;
  overflow-x: hidden;
}
.vertical-slider__image {
  width: 100%;
}

.user-login {
  position: relative;
}
.user-login__tabs {
  position: absolute;
  top: 0;
  right: 10px;
  border: none;
}
.user-login__tabs a {
  background-color: transparent !important;
  border: none !important;
  color: #d5d5d5;
  padding: 14px 5px 11px !important;
}
.user-login__tabs .active a {
  color: #ffffff !important;
}

.site-news-item {
  position: relative;
  clear: both;
}
.site-news-item:not(:last-child) {
  min-height: 85px;
  margin-bottom: 15px;
}
.site-news-item:not(:last-child)::after {
  position: absolute;
  right: 0;
  bottom: -4px;
  content: "";
  height: 1px;
  width: calc(100% - 85px);
  background-color: #d5d5d5;
}
.site-news-item:hover a {
  color: #df8a13;
}
.site-news-item:hover .site-news-item__thumbnail {
  background-color: #df8a13;
  border-color: #df8a13;
}
.site-news-item__thumbnail {
  float: left;
  width: 75px;
  margin: 0 10px 10px 0;
  -webkit-transition: background-color 0.25s, border-color 0.25s;
  -o-transition: background-color 0.25s, border-color 0.25s;
  transition: background-color 0.25s, border-color 0.25s;
}
.site-news-item__title {
  margin-bottom: 8px;
  display: -webkit-box;
  overflow: hidden;
  height: 50px;
  font-size: 1rem;
  line-height: 1.5rem;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.site-news-item__title a {
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}
.site-news-item__date {
  text-align: right;
  font-size: 0.8rem;
  color: #6f6f6f;
}

.top-films__body {
  padding-right: 0;
  padding-left: 0;
}
.top-films__list {
  margin-bottom: 0;
}
.top-films__item {
  background-color: transparent;
  margin-right: -1px;
  margin-left: -1px;
  padding-right: 55px;
  color: #165690 !important;
}
.top-films__item:first-child {
  border-radius: 0;
  border-top: none;
}
.top-films__item:last-child {
  border-radius: 0;
  border-bottom: none;
}
.top-films__item:hover, .top-films__item:focus {
  background-color: #df8a13 !important;
  color: #ffffff !important;
  border-color: #df8a13;
}
.top-films__item:hover .badge, .top-films__item:focus .badge {
  background-color: #000000;
}
.top-films__badge {
  position: absolute;
  top: 50%;
  right: 15px;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
}

/** @format */
.footer {
  padding-top: 45px;
  background-color: #232323;
  color: #d5d5d5;
}
.footer ul {
  padding: 0;
  list-style: none;
}
.footer a {
  color: #6f6f6f;
}
.footer a:hover {
  color: #ffffff;
}
.footer-fifth {
  margin: 20px 0;
  text-align: center;
}
.footer-fifth a {
  color: #d5d5d5;
}
.footer-fifth a:hover {
  color: #ffffff;
}
@media (min-width: 576px) {
  h1 {
    font-size: 3rem;
    margin: -10px 0 1em;
    font-family: "PT Serif", serif;
  }
  h2 {
    margin: 60px 0 45px 45px;
    font-size: 2.5rem;
  }
  h3 {
    font-size: 1.5rem;
  }
  .header-logo__title {
    font-size: 3.5rem;
    letter-spacing: 0.33em;
    margin-right: -0.33em;
  }
}
@media (min-width: 768px) {
  .navbar-inverse .navbar-nav > li > a {
    border-radius: 4px;
  }
  .navbar-left li {
    margin: 5px 5px 5px 0;
  }
  .navbar-right li {
    margin: 5px 0 5px 5px;
  }
}
@media (max-width: 767.8px) {
  .navbar-inverse {
    text-align: center;
  }
  .navbar-left {
    margin-bottom: 0;
  }
  .navbar-right {
    margin-top: 0;
  }
}
@media (max-width: 575.8px) {
  h1 {
    font-size: 2rem;
    margin: 0 0 1em;
  }
  h2 {
    margin: 45px 0 30px 45px;
    font-size: 1.75rem;
  }
  h3 {
    font-size: 1.25rem;
  }
  .header-logo__title {
    font-size: 2.5rem;
    letter-spacing: 0.33em;
    margin-right: -0.33em;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */